name: domain repo CI/CD

on:
  # branch 감시
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  backend-cicd-job:
    name: backend cicd
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ secrets.NODE_VERSION }}
      
      - name: Copy Secret
        env:
          CERT_REQUEST_CSR: ${{ secrets.CERT_REQUEST_CSR }}
          CERT_PEM: ${{ secrets.CERT_PEM }}
          PRIVATE_KEY_PEM: ${{ secrets.PRIVATE_KEY_PEM }}
          SECRET_DIR: ${{ secrets.DEPLOY_PATH }}/secret
        run:
          echo $CERT_REQUEST_CSR >> $SECRET_DIR/cert-request.csr &&
          echo $CERT_PEM >> $SECRET_DIR/cert.pem &&
          echo $PRIVATE_KEY_PEM >> $SECRET_DIR/private-key.pem

      - name: Cache node module
        uses: actions/cache@v3
        id: cache
        with:
          path: node_modules
          key: npm-packages-${{ hashFiles('**/package-lock.json') }}

      - name: install dependencies
        working-directory: ./backend
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: backend-build
        working-directory: ./backend
        run: npm run build
      
      - name: deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_PASSWORD }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}/backend
            bash ./deploy.sh

  nginx-frontend-cicd-job:
    name: frontend cicd
    runs-on: ubuntu-latest

    # linux checkout
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ secrets.NODE_VERSION }}

      - name: Copy Secret
        env:
          CERT_REQUEST_CSR: ${{ secrets.CERT_REQUEST_CSR }}
          CERT_PEM: ${{ secrets.CERT_PEM }}
          PRIVATE_KEY_PEM: ${{ secrets.PRIVATE_KEY_PEM }}
          SECRET_DIR: ${{ secrets.DEPLOY_PATH }}/secret
        run:
          echo $CERT_REQUEST_CSR > $SECRET_DIR/cert-request.csr &&
          echo $CERT_PEM > $SECRET_DIR/cert.pem &&
          echo $PRIVATE_KEY_PEM > $SECRET_DIR/private-key.pem

      - name: Cache node module
        uses: actions/cache@v3
        id: cache
        with:
          path: node_modules
          key: npm-packages-${{ hashFiles('**/package-lock.json') }}

      - name: install dependencies
        working-directory: ./frontend
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: front-build
        working-directory: ./frontend
        run: npm run build

      # https://github.com/marketplace/actions/ssh-remote-commands
      - name: deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_PASSWORD }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            bash ./deploy.sh
